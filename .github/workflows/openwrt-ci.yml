# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  schedule:
    - cron: 0 20 * * *

permissions:
  contents: read

jobs:

  build_openwrt:

    name: Build OpenWrt Firmware

    runs-on: ubuntu-22.04

    steps:
      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gcc-multilib g++-multilib gettext genisoimage git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool llvm lrzsz msmtp ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Checkout OpenWrt
        uses: actions/checkout@v4

      - name: Update feeds
        run: |
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          cat >> .config <<EOF
          #
          # ========================固件定制部分========================
          #
          CONFIG_TARGET_mediatek=y
          CONFIG_TARGET_mediatek_filogic=y
          CONFIG_TARGET_mediatek_filogic_DEVICE_glinet_gl-mt3000=y
          CONFIG_BUILD_PATENTED=y
          CONFIG_HTOP_LMSENSORS=y
          CONFIG_LIBQMI_COLLECTION_BASIC=y
          CONFIG_LIBQMI_WITH_MBIM_QMUX=y
          CONFIG_LIBQMI_WITH_QRTR_GLIB=y
          CONFIG_LIBSODIUM_MINIMAL=y
          CONFIG_MBEDTLS_AES_C=y
          CONFIG_MBEDTLS_CMAC_C=y
          CONFIG_MBEDTLS_DES_C=y
          CONFIG_MBEDTLS_ECP_DP_CURVE25519_ENABLED=y
          CONFIG_MBEDTLS_ECP_DP_SECP256K1_ENABLED=y
          CONFIG_MBEDTLS_ECP_DP_SECP256R1_ENABLED=y
          CONFIG_MBEDTLS_ECP_DP_SECP384R1_ENABLED=y
          CONFIG_MBEDTLS_ENTROPY_FORCE_SHA256=y
          CONFIG_MBEDTLS_GCM_C=y
          CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED=y
          CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_PSK_ENABLED=y
          CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED=y
          CONFIG_MBEDTLS_KEY_EXCHANGE_PSK_ENABLED=y
          CONFIG_MBEDTLS_NIST_KW_C=y
          CONFIG_MBEDTLS_RSA_NO_CRT=y
          CONFIG_MODEMMANAGER_WITH_MBIM=y
          CONFIG_MODEMMANAGER_WITH_QMI=y
          CONFIG_MODEMMANAGER_WITH_QRTR=y
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_bridge=y
          CONFIG_PACKAGE_chinadns-ng=y
          CONFIG_PACKAGE_coreutils=y
          CONFIG_PACKAGE_coreutils-base64=y
          CONFIG_PACKAGE_coreutils-nohup=y
          CONFIG_PACKAGE_dbus=y
          CONFIG_PACKAGE_dns2socks=y
          CONFIG_PACKAGE_filebrowser=y
          CONFIG_PACKAGE_geoview=y
          CONFIG_PACKAGE_glib2=y
          CONFIG_PACKAGE_haproxy=y
          CONFIG_PACKAGE_iperf3=y
          CONFIG_PACKAGE_iptables-mod-ipopt=y
          CONFIG_PACKAGE_iptables-mod-iprange=y
          CONFIG_PACKAGE_iptables-mod-socket=y
          CONFIG_PACKAGE_kmod-crypto-crc32c=y
          CONFIG_PACKAGE_kmod-crypto-kpp=y
          CONFIG_PACKAGE_kmod-crypto-lib-chacha20=y
          CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=y
          CONFIG_PACKAGE_kmod-crypto-lib-curve25519=y
          CONFIG_PACKAGE_kmod-crypto-lib-poly1305=y
          CONFIG_PACKAGE_kmod-inet-diag=y
          CONFIG_PACKAGE_kmod-ipt-ipopt=y
          CONFIG_PACKAGE_kmod-ipt-iprange=y
          CONFIG_PACKAGE_kmod-ipt-socket=y
          CONFIG_PACKAGE_kmod-lib-crc32c=y
          CONFIG_PACKAGE_kmod-mii=y
          CONFIG_PACKAGE_kmod-netlink-diag=y
          CONFIG_PACKAGE_kmod-nf-socket=y
          CONFIG_PACKAGE_kmod-nft-core=y
          CONFIG_PACKAGE_kmod-nft-tproxy=y
          CONFIG_PACKAGE_kmod-pcie_mhi=y
          CONFIG_PACKAGE_kmod-qmi_wwan_f=y
          CONFIG_PACKAGE_kmod-qmi_wwan_q=y
          CONFIG_PACKAGE_kmod-udptunnel4=y
          CONFIG_PACKAGE_kmod-udptunnel6=y
          CONFIG_PACKAGE_kmod-usb-net=y
          CONFIG_PACKAGE_kmod-usb-net-cdc-ether=y
          CONFIG_PACKAGE_kmod-usb-net-cdc-mbim=y
          CONFIG_PACKAGE_kmod-usb-net-cdc-ncm=y
          CONFIG_PACKAGE_kmod-usb-net-qmi-wwan=y
          CONFIG_PACKAGE_kmod-usb-wdm=y
          CONFIG_PACKAGE_kmod-wireguard=y
          CONFIG_PACKAGE_kmod-wwan=y
          CONFIG_PACKAGE_libatomic=y
          CONFIG_PACKAGE_libattr=y
          CONFIG_PACKAGE_libcap=y
          CONFIG_PACKAGE_libcap-bin=y
          CONFIG_PACKAGE_libcap-bin-capsh-shell="/bin/sh"
          CONFIG_PACKAGE_libcares=y
          CONFIG_PACKAGE_libdbus=y
          CONFIG_PACKAGE_libev=y
          CONFIG_PACKAGE_libexpat=y
          CONFIG_PACKAGE_libffi=y
          CONFIG_PACKAGE_libgmp=y
          CONFIG_PACKAGE_libiperf3=y
          CONFIG_PACKAGE_libltdl=y
          CONFIG_PACKAGE_liblua5.3=y
          CONFIG_PACKAGE_libmbedtls=y
          CONFIG_PACKAGE_libmbim=y
          CONFIG_PACKAGE_libminiupnpc=y
          CONFIG_PACKAGE_libnatpmp=y
          CONFIG_PACKAGE_libpcre2=y
          CONFIG_PACKAGE_libqmi=y
          CONFIG_PACKAGE_libqrtr-glib=y
          CONFIG_PACKAGE_libreadline=y
          CONFIG_PACKAGE_libruby=y
          CONFIG_PACKAGE_libsodium=y
          CONFIG_PACKAGE_libstdcpp=y
          CONFIG_PACKAGE_libuci-lua=y
          CONFIG_PACKAGE_libuv=y
          CONFIG_PACKAGE_libwebsockets-full=y
          CONFIG_PACKAGE_libyaml=y
          CONFIG_PACKAGE_luci-app-filebrowser=y
          CONFIG_PACKAGE_luci-app-mwan3=y
          CONFIG_PACKAGE_luci-app-mwan3helper=y
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_luci-app-passwall=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Geoview=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Haproxy=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR_Libev_Client=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Libev_Client=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Libev_Server=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Rust_Client=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Simple_Obfs=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_SingBox=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan_Plus=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray_Plugin=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Xray=y
          CONFIG_PACKAGE_luci-app-passwall_Iptables_Transparent_Proxy=y
          CONFIG_PACKAGE_luci-app-ttyd=y
          CONFIG_PACKAGE_luci-app-v2raya=y
          CONFIG_PACKAGE_luci-i18n-filebrowser-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-mwan3-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-mwan3helper-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-ttyd-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-v2raya-zh-cn=y
          CONFIG_PACKAGE_luci-proto-mbim=y
          CONFIG_PACKAGE_luci-proto-modemmanager=y
          CONFIG_PACKAGE_luci-proto-qmi=y
          CONFIG_PACKAGE_luci-proto-wireguard=y
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_microsocks=y
          CONFIG_PACKAGE_modemmanager=y
          CONFIG_PACKAGE_mtr-nojson=y
          CONFIG_PACKAGE_mwan3=y
          CONFIG_PACKAGE_openssh-sftp-server=y
          CONFIG_PACKAGE_pdnsd-alt=y
          CONFIG_PACKAGE_resolveip=y
          CONFIG_PACKAGE_ruby=y
          CONFIG_PACKAGE_ruby-bigdecimal=y
          CONFIG_PACKAGE_ruby-date=y
          CONFIG_PACKAGE_ruby-digest=y
          CONFIG_PACKAGE_ruby-enc=y
          CONFIG_PACKAGE_ruby-forwardable=y
          CONFIG_PACKAGE_ruby-pstore=y
          CONFIG_PACKAGE_ruby-psych=y
          CONFIG_PACKAGE_ruby-stringio=y
          CONFIG_PACKAGE_ruby-strscan=y
          CONFIG_PACKAGE_ruby-yaml=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-local=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-redir=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-server=y
          CONFIG_PACKAGE_sing-box=y
          CONFIG_PACKAGE_tailscale=y
          CONFIG_PACKAGE_tcping=y
          CONFIG_PACKAGE_ttyd=y
          CONFIG_PACKAGE_umbim=y
          CONFIG_PACKAGE_unzip=y
          CONFIG_PACKAGE_uqmi=y
          CONFIG_PACKAGE_v2raya=y
          CONFIG_PACKAGE_wireguard-tools=y
          CONFIG_PACKAGE_wireless-tools=y
          CONFIG_PACKAGE_wwan=y
          CONFIG_PACKAGE_xray-core=y
          CONFIG_PACKAGE_zerotier=y
          CONFIG_SING_BOX_WITH_CLASH_API=y
          CONFIG_SING_BOX_WITH_DHCP=y
          CONFIG_SING_BOX_WITH_ECH=y
          CONFIG_SING_BOX_WITH_GVISOR=y
          CONFIG_SING_BOX_WITH_QUIC=y
          CONFIG_SING_BOX_WITH_UTLS=y
          CONFIG_SING_BOX_WITH_WIREGUARD=y
          #
          # ========================固件定制部分结束========================
          #
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Download packages
        run: make download -j16

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Upload buildinfo
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
